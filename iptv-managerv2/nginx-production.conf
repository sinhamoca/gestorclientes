# ========================================
# NGINX CONFIG - IPTV MANAGER (CLOUDFLARE)
# ========================================
# Para uso com Cloudflare SSL
# O Cloudflare gerencia o SSL, Nginx responde em HTTP

server {
    listen 80;
    listen [::]:80;
    server_name iptv.comprarecarga.shop;

    # Logs
    access_log /var/log/nginx/iptv_manager_access.log;
    error_log /var/log/nginx/iptv_manager_error.log;

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Tamanho máximo de upload
    client_max_body_size 10M;

    # ========================================
    # PROXY PARA BACKEND (API) - PORTA 5001
    # ========================================
    location /api/ {
        proxy_pass http://localhost:5001/api/;
        proxy_http_version 1.1;

        # Headers necessários
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (se necessário)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check do backend
    location /health {
        proxy_pass http://localhost:5001/health;
        access_log off;
    }

    # ========================================
    # FRONTEND - PORTA 5000
    # ========================================
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Cache para arquivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://localhost:5000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
